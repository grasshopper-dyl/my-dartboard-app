generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id(map: "PK__Account__3213E83FD473D917") @db.NVarChar(255)
  userId            String? @db.NVarChar(255)
  type              String? @db.NVarChar(255)
  provider          String? @db.NVarChar(255)
  providerAccountId String? @db.NVarChar(255)
  refresh_token     String? @db.NVarChar(Max)
  access_token      String? @db.NVarChar(Max)
  expires_at        Int?
  token_type        String? @db.NVarChar(255)
  scope             String? @db.NVarChar(255)
  id_token          String? @db.NVarChar(Max)
  session_state     String? @db.NVarChar(255)
  User              User?   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "account_userId_fk")

  @@unique([provider, providerAccountId], map: "account_provider_providerAccountId")
}

model Session {
  id           String    @id(map: "PK__Session__3213E83F23706105") @db.NVarChar(255)
  sessionToken String?   @unique(map: "UQ__Session__7D789C12B9CB2552") @db.NVarChar(255)
  userId       String?   @db.NVarChar(255)
  expires      DateTime?
  User         User?     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "session_userId_fk")
}

model User {
  id            String    @id(map: "PK__User__3213E83FE7979CED") @db.NVarChar(255)
  name          String?   @db.NVarChar(255)
  email         String?   @unique(map: "UQ__User__AB6E6164169B6C6A") @db.NVarChar(255)
  emailVerified DateTime?
  image         String?   @db.NVarChar(Max)
  Account       Account[]
  Session       Session[]
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.

model VerificationToken {
  id        Int      @id @default(autoincrement())
  token     String   @unique
  expires   DateTime?

  @@ignore
}

